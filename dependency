<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.wipro</groupId>
  <artifactId>spring-core-app</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>spring-core-app</name>
  <description>A simple spring-core-app.</description>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencies>
   <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>6.1.8</version>
</dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
*************************Spring Config****************



package com.wipro.config;
import java.time.LocalDate;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import com.wipro.model.Address;
import com.wipro.model.Person;
@Configuration
public class SpringConfiguration {
	@Bean
	public Address addressBean1() {
		return new Address("1-2-3-567","James Street","Panty","Secunderabad", 500029L);
	}
	
	@Bean
	public Address addressBean2() {
		return new Address("11-12-13-1567","Queens Street","MG Road","Secunderabad", 500039L);
	}
	
	@Bean
	public Person personBean() {
		return new Person(987879657424L,"Mounika Reddy",LocalDate.of(1989, 10,10),addressBean1(),addressBean2());
	}
}



****************************MyBeanConfiguration***********
package com.wpro.model;

public class User {
	private String userid;
	private String password;
	
	
	public User() {
		
	}
	public User(String userid, String password) {
		super();
		this.userid = userid;
		this.password = password;
	}
	public String getUserid() {
		return userid;
	}
	public void setUserid(String userid) {
		this.userid = userid;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	@Override
	public String toString() {
		return "User [userid=" + userid + ", password=" + password + "]";
	}
	
	public void customInitialize() {
		System.out.println("customInitialize() method executed");
	}
	
	public void customDestroy() {
		System.out.println("customDestroy() method is executed");
	}


	
}
*************************************User*********


package com.wipro.model;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

import jakarta.annotation.PostConstruct;
import jakarta.annotation.PreDestroy;




public class User implements InitializingBean, DisposableBean{
	private String userid;
	private String password;
	
	
	public User() {
		
	}
	public User(String userid, String password) {
		super();
		this.userid = userid;
		this.password = password;
	}
	public String getUserid() {
		return userid;
	}
	public void setUserid(String userid) {
		this.userid = userid;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	@Override
	public String toString() {
		return "User [userid=" + userid + ", password=" + password + "]";
	}
	
	
	public void customInitialize() {
		System.out.println("customInitialize() method executed");
	}
	
	public void customDestroy() {
		System.out.println("customDestroy() method is executed");
	}
	
	
	@PostConstruct
	public void postConstruct() {
		System.out.println("postConstruct() method is executed");
	}
	
	@PreDestroy
	public void preDestroy() {
		System.out.println("preDestroy() method is executed");
	}
	@Override
	public void destroy() throws Exception {
		System.out.println("destroy() method InitializingBean inetrface is executed");
		
	}
	@Override
	public void afterPropertiesSet() throws Exception {
		System.out.println("afterPropertiesSet() method of InitializingBean inetrface is executed");
		
	}
}

		


